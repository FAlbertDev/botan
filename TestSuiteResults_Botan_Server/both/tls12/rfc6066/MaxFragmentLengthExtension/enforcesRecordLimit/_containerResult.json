{"finished":true,"Score":{"ALERT":{"overwritten":false,"Reached":0.0,"Total":0.0,"SeverityLevel":"MEDIUM","Percentage":100.0},"COMPLIANCE":{"overwritten":false,"Reached":0.0,"Total":0.0,"SeverityLevel":"MEDIUM","Percentage":100.0},"HANDSHAKE":{"overwritten":false,"Reached":0.0,"Total":0.0,"SeverityLevel":"LOW","Percentage":100.0}},"TestMethod":{"Description":"Note that the output of the record layer may be larger.  For example, if the negotiated length is 2^9=512, then, when using currently defined cipher suites (those defined in [RFC5246] and [RFC2712]) and null compression, the record-layer output can be at most 805 bytes: 5 bytes of headers, 512 bytes of application data, 256 bytes of padding, and 32 bytes of MAC.  This means that in this event a TLS record-layer peer receiving a TLS record-layer message larger than 805 bytes MUST discard the message and send a \"record_overflow\" alert, without decrypting the message.","TlsVersion":"TLS12","RFC":{"number":6066,"Section":"4.  Maximum Fragment Length Negotiation"},"MethodName":"enforcesRecordLimit","DisplayName":"enforcesRecordLimit(ArgumentsAccessor, WorkflowRunner)","ClassName":"de.rub.nds.tlstest.suite.tests.both.tls12.rfc6066.MaxFragmentLengthExtension"},"Result":"DISABLED","HasStateWithAdditionalResultInformation":false,"HasVaryingAdditionalResultInformation":false,"DisabledReason":"Client does not support maximum fragment length","FailedReason":null,"ElapsedTime":187,"StatesCount":0,"FailureInducingCombinations":null,"States":[]}