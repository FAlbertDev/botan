{"finished":true,"Score":{"SECURITY":{"overwritten":false,"Reached":0.0,"Total":0.0,"SeverityLevel":"HIGH","Percentage":100.0},"ALERT":{"overwritten":false,"Reached":0.0,"Total":0.0,"SeverityLevel":"LOW","Percentage":100.0},"COMPLIANCE":{"overwritten":false,"Reached":0.0,"Total":0.0,"SeverityLevel":"HIGH","Percentage":100.0},"HANDSHAKE":{"overwritten":false,"Reached":0.0,"Total":0.0,"SeverityLevel":"MEDIUM","Percentage":100.0}},"TestMethod":{"Description":"The \"supported_versions\" extension is used by the client to indicate which versions of TLS it supports and by the server to indicate which version it is using.  The extension contains a list of supported versions in preference order, with the most preferred version first. [...]If the version chosen by the server is not supported by the client (or is not acceptable), the client MUST abort the handshake with a \"protocol_version\" alert.","TlsVersion":"TLS13","RFC":{"number":8446,"Section":"4.2.1 Supported Versions and D.1. Negotiating with an Older Server"},"MethodName":"negotiateUnproposedOldProtocolVersion","DisplayName":"negotiateUnproposedOldProtocolVersion(ArgumentsAccessor, WorkflowRunner)","ClassName":"de.rub.nds.tlstest.suite.tests.client.tls13.rfc8446.SupportedVersions"},"Result":"DISABLED","HasStateWithAdditionalResultInformation":false,"HasVaryingAdditionalResultInformation":false,"DisabledReason":"TestEndpointMode doesn't match, skipping test.","FailedReason":null,"ElapsedTime":69,"StatesCount":0,"FailureInducingCombinations":null,"States":[]}